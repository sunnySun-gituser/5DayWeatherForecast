{"version":3,"sources":["components/header.js","components/search.js","components/weather.js","components/weathers.js","components/forecast.js","components/maincontent.js","App.js","index.js"],"names":["Header","className","withRouter","props","useState","weatherInput","setWeatherInput","onSubmit","e","preventDefault","history","push","style","marginBotton","value","onChange","target","type","placeholder","Weather","console","log","activeWeather","Date","dt","toLocaleDateString","weekday","year","month","day","src","weather","icon","alt","main","description","temp","min","max","humidity","speed","clouds","Weathers","setActiveWeather","options","useEffect","item","list","city","name","country","id","map","element","onClick","Forecast","APIKEY","foreCast","setForeCast","a","async","axios","match","params","zipcode","result","data","fetchData","MainContent","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7286b637.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return ( \r\n          <header className=\"App-header\">\r\n            {/* <NavLink to={'/'} exact ><h1 className='App-title'>5-Day Weather Forecast</h1></NavLink> */}\r\n            <h1 className='App-title'>5-Day Weather Forecast</h1>\r\n          </header>\r\n     );\r\n}\r\n \r\nexport default Header;","import React, {useState} from 'react';\r\nimport{\r\n    withRouter, Redirect,\r\n} from 'react-router-dom'\r\n\r\nconst SearchForm = (props) => {\r\n    const [weatherInput, setWeatherInput] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.history.push(`/${weatherInput}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit} style={{marginBotton: '2rem'}}>\r\n                <input value={weatherInput}\r\n                        onChange={e => { setWeatherInput(e.target.value)}}\r\n                        className=\"form__input\"\r\n                        type=\"text\"\r\n                        placeholder='Enter zip code ...' />\r\n                <button className=\"btn btn-primary\">Send</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(SearchForm);","import React from 'react';\r\n\r\n\r\nconst Weather = (props) => {\r\n    console.log(props.activeWeather)\r\n    // console.log(new Date(props.activeWeather.dt*1000).toLocaleDateString())\r\n    const options = { weekday: \"long\", year: \"numeric\", month: \"short\",\r\n    day: \"numeric\" };\r\n\r\n    return !props.activeWeather\r\n        ? <div><h2>Loading...</h2></div>\r\n        : (\r\n            <div className='col-md-3'>\r\n                {props.activeWeather && (\r\n                <div className='weather__box__1'>\r\n                    <p>{new Date(props.activeWeather.dt * 1000).toLocaleDateString(\"en-US\", options)}</p>\r\n                    <img src={`http://openweathermap.org/img/wn/${props.activeWeather.weather[0].icon}@2x.png`} alt=''/>\r\n                    <p><span>{props.activeWeather.weather[0].main}: &nbsp;  {props.activeWeather.weather[0].description}</span></p>\r\n                    <p>{props.activeWeather.temp.day} °С temperature from {props.activeWeather.temp.min} to {props.activeWeather.temp.max} °С</p>\r\n                    <p><span> humidity: {props.activeWeather.humidity} </span></p>\r\n                    <p><span> wind:  {props.activeWeather.speed} m/s </span></p>\r\n                    <p><span> clouds:  {props.activeWeather.clouds}</span></p>\r\n                </div>)}\r\n            </div>);\r\n}\r\n\r\nexport default Weather;","import React, {useState, useEffect} from 'react';\r\nimport Weather from './weather'\r\nimport SearchForm from './search';\r\n\r\n\r\nconst Weathers = (props) => {\r\n    const [weatherInput, setWeatherInput] = useState('');\r\n    const [activeWeather, setActiveWeather] = useState(null);\r\n    const options = { weekday: \"long\", \r\n                        year: \"numeric\", \r\n                        month: \"short\",\r\n                        day: \"numeric\"};\r\n\r\n    const imageClick = (item) => {\r\n        setActiveWeather(item);\r\n    }\r\n\r\n    const handleOnChange = event => {\r\n        event.preventDefault();\r\n        setWeatherInput(event.target.value);\r\n    }\r\n\r\n    // get data first then re-render the page\r\n    useEffect(() => {\r\n        setActiveWeather(props.item.list[0])\r\n    }, [props.item.list])\r\n\r\n    return(\r\n            <div className='container'>\r\n                {/* <SearchForm value={weatherInput}\r\n                            handleOnChange={handleOnChange}/> */}\r\n                    {props.item && (\r\n                        <div>\r\n                            <div className='city-name'>\r\n                                <br />\r\n                                <h4>{props.item.city.name}<span>, {props.item.city.country}</span></h4><br />\r\n                                <Weather activeWeather={activeWeather}/>\r\n                                <hr />\r\n                            </div>\r\n                            <div id='weather-pad'>\r\n                                {props.item.list.map((element) =>\r\n                                    <div className='weather__box'\r\n                                        onClick={() => imageClick(element)}>\r\n                                            <img src={`http://openweathermap.org/img/wn/${element.weather[0].icon}@2x.png`}\r\n                                                    alt=''\r\n                                                    className='weather__box-img'/>\r\n                                                <p className='weather__title'>\r\n                                                    <span>Min: {element.temp.min} °С &nbsp; Max: {element.temp.max} °С</span></p>\r\n                                                <p>{new Date(element.dt * 1000).toLocaleDateString(\"en-US\", options)}</p>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Weathers;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Weathers from './weathers'\r\n\r\nconst Forecast = (props) => {\r\n    const [APIKEY, setAPIKEY] = useState('789c7a808690dc32dbf1324ad4b2e1e3');\r\n    // const [weathers, setWeathers] = useState({weather:[{description:''}]});\r\n    const [foreCast, setForeCast] = useState({});\r\n\r\n    useEffect(() => {    \r\n        const fetchData = async () => {\r\n            const result = await axios(\r\n                // `http://api.openweathermap.org/data/2.5/weather?zip=${props.match.params.zipcode},us&units=imperial&APPID=${APIKEY}`\r\n                `https://api.openweathermap.org/data/2.5/forecast/daily?q=${props.match.params.zipcode},us&units=imperial&cnt=5&appid=${APIKEY}`\r\n            );\r\n\r\n            setForeCast(result.data);\r\n            console.log(result.data)\r\n        }\r\n\r\n        fetchData();\r\n    }, [props.match.params.zipcode]);\r\n\r\n    return !foreCast\r\n        ?   <div><h2>Loading...</h2></div>\r\n        : (\r\n            <div>\r\n                {foreCast.list && (\r\n                <div className='city-name'>\r\n                    <Weathers item={foreCast}/>\r\n                </div>)}\r\n            </div>);\r\n}\r\n \r\nexport default Forecast;","import React from 'react';\r\nimport{\r\n    Switch,\r\n    Route,\r\n} from 'react-router-dom'\r\n\r\nimport SearchForm from './search';\r\nimport Forecast from './forecast';\r\n\r\nconst MainContent = () => {\r\n    return ( \r\n        <div>\r\n            <SearchForm />\r\n\r\n            <Switch>\r\n                {/* <Route exact path=\"/\" component={SearchForm} /> */}\r\n                <Route path='/:zipcode' component={Forecast} />\r\n            </Switch>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default MainContent;","import React from 'react';\nimport './App.css';\n\nimport Header from './components/header'\nimport MainContent from './components/maincontent'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainContent />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {\n    BrowserRouter as Router,\n} from 'react-router-dom'\n\n//just put comment in it\nReactDOM.render(\n        <Router><App /></Router>, \n        document.getElementById('root'));\n"],"sourceRoot":""}